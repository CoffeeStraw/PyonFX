"""
Shape & colour definitions for the "Dangos".

It provides:
- Vector paths for body, eyes and accessories.
- Helpers `_make_shape` / `_make_config` that normalise coordinates and
  build dictionaries understood by the renderer.
- Public constants:
    RENDER_ORDER         → order in which to render the shapes
    VARIANT_LOOKUP       → {variant: (shape_dict, style_dict)}
    VARIANT_BASE_CONFIGS → palettes for random “base” dangos
    DANGO_ALTERNATIVES   → extra shapes toggled during animation

Adding a new variant:
1) Draw your SVG path(s) with Aegisub/other tools and assign them to a constant at the top of this file;
2) Include the paths in `_SHAPE_SETS` and create a colour entry in `_COLOR_CONFIGS`;
3) That's it: the new shape will be assigned to syllables having the same `inline_fx` value!
"""

from pyonfx import Shape

# Base shape components (raw paths before transformation)
_DANGO_BODY = (
    "m 0 23 b 0 13 5.6 8 16 8 26.4 8 32 13 32 23 32 32 26.4 36 16 36 5.6 36 0 32 0 23"
)

_BASE_EYES = "m 12.48 15.3 b 12.88 15.3 13.28 15.8 13.28 16.3 l 13.28 23.3 b 13.28 23.8 12.88 24.3 12.48 24.3 12.08 24.3 11.68 23.8 11.68 23.3 l 11.68 16.3 b 11.68 15.8 12.08 15.3 12.48 15.3 m 20.48 15.3 b 20.88 15.3 21.28 15.8 21.28 16.3 l 21.28 23.3 b 21.28 23.8 20.88 24.3 20.48 24.3 20.08 24.3 19.68 23.8 19.68 23.3 l 19.68 16.3 b 19.68 15.8 20.08 15.3 20.48 15.3"
_CUTE_EYES = "m 13.04 14.8 b 13.24 14.8 13.44 15.2 13.44 15.6 l 13.44 21.2 b 13.44 21.6 13.24 22 13.04 22 12.84 22 12.64 21.6 12.64 21.2 l 12.64 15.6 b 12.64 15.2 12.84 14.8 13.04 14.8 m 18.64 14.8 b 18.84 14.8 19.04 15.2 19.04 15.6 l 19.04 21.2 b 19.04 21.6 18.84 22 18.64 22 18.44 22 18.24 21.6 18.24 21.2 l 18.24 15.6 b 18.24 15.2 18.44 14.8 18.64 14.8"
_ANGRY_EYES = "m 7.84 13.5 b 7.92 13.4 8.24 13.5 8.56 13.6 l 12.64 15.4 b 12.88 15.5 13.2 15.7 13.12 15.8 13.04 15.9 12.72 15.9 12.4 15.7 l 8.32 14 b 8 13.8 7.76 13.6 7.84 13.5 m 12.8 15.5 b 12.96 15.5 13.2 15.8 13.2 16.2 l 13.2 21.1 b 13.2 21.4 12.96 21.8 12.8 21.8 12.56 21.8 12.4 21.4 12.4 21.1 l 12.4 16.2 b 12.4 15.8 12.56 15.5 12.8 15.5 m 23.68 13.5 b 23.6 13.4 23.28 13.5 22.96 13.6 l 18.88 15.4 b 18.64 15.5 18.32 15.7 18.4 15.8 18.48 15.9 18.8 15.9 19.12 15.7 l 23.2 14 b 23.52 13.8 23.76 13.6 23.68 13.5 m 18.72 15.5 b 18.56 15.5 18.32 15.8 18.32 16.2 l 18.32 21.1 b 18.32 21.4 18.56 21.8 18.72 21.8 18.96 21.8 19.12 21.4 19.12 21.1 l 19.12 16.2 b 19.12 15.8 18.96 15.5 18.72 15.5"
_OLD_EYES = "m 4.115 18.618 b 4.083 18.446 4.461 18.204 4.871 18.135 l 10.607 17.162 b 11.016 17.093 11.458 17.196 11.489 17.368 11.521 17.54 11.143 17.782 10.733 17.852 l 4.997 18.824 b 4.588 18.894 4.147 18.791 4.115 18.618 m 27.565 18.618 b 27.597 18.446 27.219 18.204 26.809 18.135 l 21.073 17.162 b 20.664 17.093 20.222 17.196 20.191 17.368 20.159 17.54 20.537 17.782 20.947 17.852 l 26.683 18.824 b 27.092 18.894 27.533 18.791 27.565 18.619"
_XD_EYES = "m 7.6 16 b 7.6 15.6 7.92 15.4 8.24 15.6 l 12.08 18.6 8.24 21.6 b 7.92 21.8 7.6 21.6 7.6 21.2 l 10.8 18.6 7.6 16 m 23.6 16 b 23.6 15.6 23.28 15.4 22.96 15.6 l 19.12 18.6 22.96 21.6 b 23.28 21.8 23.6 21.6 23.6 21.2 l 20.4 18.6 23.6 16"
_SPIRAL_EYES = "m 12.712 19.26 b 12.656 18.44 12.336 17.7 11.8 17.19 11.456 16.85 11 16.62 10.552 16.54 10.312 16.5 10.032 16.5 9.8 16.54 9.504 16.6 9.208 16.73 8.968 16.91 8.552 17.22 8.272 17.64 8.144 18.14 8.096 18.32 8.072 18.47 8.064 18.66 8.024 19.57 8.536 20.35 9.272 20.5 9.488 20.55 9.712 20.54 9.896 20.47 10.072 20.42 10.248 20.3 10.368 20.17 10.552 19.97 10.672 19.66 10.664 19.42 10.656 19.3 10.632 19.2 10.568 19.03 10.496 18.83 10.408 18.71 10.28 18.63 10.168 18.56 10.096 18.54 9.96 18.55 9.864 18.55 9.816 18.56 9.736 18.6 9.568 18.67 9.448 18.79 9.4 18.97 9.392 19.01 9.384 19.03 9.384 19.11 9.384 19.19 9.392 19.21 9.4 19.25 9.416 19.31 9.44 19.36 9.472 19.42 l 9.504 19.46 9.48 19.46 b 9.416 19.45 9.336 19.43 9.304 19.41 9.256 19.39 9.216 19.36 9.16 19.29 9.04 19.14 8.984 18.96 8.992 18.73 9 18.47 9.096 18.2 9.248 18 9.408 17.8 9.648 17.64 9.904 17.59 10.024 17.56 10.232 17.55 10.36 17.57 11.008 17.66 11.528 18.18 11.712 18.91 11.808 19.28 11.8 19.7 11.704 20.09 11.504 20.87 10.976 21.48 10.256 21.73 9.928 21.85 9.552 21.89 9.176 21.83 8.864 21.79 8.552 21.67 8.264 21.5 7.992 21.33 7.784 21.15 7.576 20.9 7.264 20.53 7.056 20.08 6.936 19.58 6.728 18.66 6.888 17.63 7.376 16.8 7.544 16.52 7.768 16.24 8.008 16.02 8.44 15.61 8.984 15.33 9.568 15.21 9.768 15.17 9.92 15.15 10.144 15.15 10.512 15.14 10.736 15.17 11.176 15.28 11.296 15.32 11.408 15.3 11.52 15.24 11.656 15.15 11.736 15 11.752 14.83 11.768 14.6 11.656 14.39 11.464 14.3 11.36 14.26 11.064 14.18 10.832 14.15 10.648 14.12 10.512 14.11 10.312 14.1 9.616 14.08 8.92 14.25 8.296 14.58 8.2 14.63 7.976 14.77 7.888 14.83 7.304 15.24 6.84 15.76 6.496 16.41 6.232 16.91 6.056 17.46 5.968 18.03 5.936 18.24 5.92 18.44 5.92 18.67 5.904 19.44 6.072 20.18 6.4 20.84 6.536 21.1 6.672 21.32 6.872 21.56 7.04 21.78 7.176 21.92 7.376 22.08 8.16 22.74 9.152 23.02 10.096 22.85 10.904 22.7 11.632 22.21 12.104 21.49 12.504 20.9 12.72 20.16 12.712 19.44 12.712 19.38 12.712 19.3 12.712 19.26 m 18.176 19.97 b 18.552 20.64 19.12 21.08 19.792 21.19 20.224 21.26 20.712 21.18 21.128 20.97 21.36 20.85 21.6 20.68 21.784 20.5 22.016 20.26 22.224 19.97 22.36 19.66 22.592 19.13 22.664 18.6 22.584 18.08 22.552 17.89 22.512 17.75 22.44 17.58 22.112 16.77 21.36 16.41 20.656 16.74 20.456 16.84 20.264 16.98 20.128 17.16 20 17.31 19.896 17.52 19.84 17.71 19.76 18 19.784 18.34 19.888 18.54 19.944 18.65 20 18.72 20.12 18.82 20.264 18.95 20.392 19 20.536 18.99 20.656 18.98 20.72 18.95 20.84 18.86 20.928 18.8 20.96 18.76 21.016 18.68 21.136 18.51 21.184 18.33 21.16 18.15 21.152 18.1 21.144 18.09 21.112 18.01 21.08 17.95 21.072 17.93 21.048 17.9 21.008 17.86 20.968 17.83 20.912 17.8 l 20.872 17.78 20.896 17.77 b 20.952 17.74 21.032 17.71 21.064 17.7 21.12 17.69 21.168 17.69 21.24 17.72 21.408 17.77 21.52 17.89 21.608 18.1 21.704 18.33 21.728 18.62 21.672 18.89 21.624 19.17 21.472 19.45 21.28 19.66 21.184 19.76 21.008 19.89 20.888 19.96 20.288 20.28 19.632 20.16 19.184 19.64 18.952 19.38 18.792 19.02 18.72 18.61 18.576 17.81 18.792 16.96 19.312 16.29 19.552 15.98 19.856 15.72 20.208 15.53 20.496 15.37 20.816 15.28 21.128 15.25 21.432 15.22 21.688 15.24 21.968 15.33 22.384 15.46 22.744 15.71 23.048 16.08 23.6 16.74 23.864 17.73 23.776 18.76 23.744 19.11 23.664 19.49 23.552 19.83 23.328 20.46 22.976 21.04 22.52 21.5 22.36 21.67 22.24 21.78 22.048 21.92 21.728 22.16 21.528 22.27 21.096 22.44 20.976 22.49 20.888 22.58 20.816 22.7 20.736 22.86 20.72 23.04 20.776 23.2 20.856 23.41 21.04 23.52 21.24 23.48 21.344 23.45 21.632 23.33 21.848 23.22 22.016 23.13 22.144 23.05 22.32 22.93 22.928 22.51 23.464 21.94 23.872 21.26 23.936 21.15 24.072 20.89 24.128 20.78 24.464 20.07 24.656 19.33 24.696 18.55 24.728 17.95 24.664 17.36 24.504 16.82 24.448 16.61 24.384 16.43 24.296 16.23 24 15.56 23.56 15.02 23.008 14.65 22.784 14.51 22.576 14.41 22.312 14.32 22.08 14.24 21.904 14.2 21.672 14.18 20.728 14.1 19.752 14.48 19.008 15.22 18.368 15.85 17.936 16.74 17.808 17.65 17.704 18.41 17.808 19.19 18.104 19.81 18.128 19.86 18.16 19.93 18.176 19.97"

_CUTE_CHEEKS = "m 7.672 26.13 b 7.672 22.35 12.208 22.35 12.208 26.13 12.208 29.91 7.672 29.91 7.672 26.13 m 19.672 26.13 b 19.672 22.35 24.208 22.35 24.208 26.13 24.208 29.91 19.672 29.91 19.672 26.13"
_ANGRY_CHEEKS = "m 8.895 22.156 b 8.952 22.182 8.954 22.395 8.899 22.583 l 8.133 25.214 b 8.078 25.402 7.967 25.565 7.91 25.539 7.854 25.513 7.852 25.3 7.907 25.112 l 8.673 22.481 b 8.728 22.293 8.839 22.13 8.895 22.156 m 10.023 22.669 b 10.08 22.695 10.081 22.908 10.026 23.096 l 9.26 25.727 b 9.206 25.915 9.094 26.078 9.038 26.052 8.982 26.026 8.98 25.813 9.035 25.625 l 9.801 22.994 b 9.856 22.806 9.967 22.643 10.023 22.669 m 11.151 23.182 b 11.207 23.208 11.209 23.421 11.154 23.609 l 10.388 26.24 b 10.333 26.428 10.222 26.591 10.166 26.565 10.109 26.539 10.108 26.326 10.162 26.138 l 10.929 23.507 b 10.983 23.319 11.094 23.157 11.151 23.182 m 8.047 22.089 b 8.067 22.019 8.298 22.044 8.509 22.14 l 11.456 23.48 b 11.666 23.576 11.856 23.742 11.835 23.813 11.815 23.883 11.584 23.858 11.373 23.762 l 8.427 22.422 b 8.216 22.326 8.026 22.16 8.047 22.089 m 7.773 23.029 b 7.794 22.958 8.024 22.984 8.235 23.079 l 11.182 24.42 b 11.392 24.516 11.582 24.682 11.562 24.753 11.541 24.823 11.31 24.798 11.1 24.702 l 8.153 23.361 b 7.942 23.266 7.752 23.099 7.773 23.029 m 7.499 23.968 b 7.52 23.898 7.751 23.923 7.961 24.019 l 10.908 25.36 b 11.119 25.456 11.309 25.622 11.288 25.692 11.268 25.763 11.037 25.738 10.826 25.642 l 7.879 24.301 b 7.669 24.205 7.479 24.039 7.499 23.968 m 7.226 24.908 b 7.246 24.838 7.477 24.863 7.688 24.959 l 10.635 26.3 b 10.845 26.395 11.035 26.562 11.015 26.632 10.994 26.702 10.763 26.677 10.553 26.581 l 7.606 25.241 b 7.395 25.145 7.205 24.979 7.226 24.908 m 23.105 22.156 b 23.048 22.182 23.046 22.395 23.101 22.583 l 23.867 25.214 b 23.922 25.402 24.033 25.565 24.09 25.539 24.146 25.513 24.148 25.3 24.093 25.112 l 23.327 22.481 b 23.272 22.293 23.161 22.13 23.105 22.156 m 21.977 22.669 b 21.92 22.695 21.919 22.908 21.974 23.096 l 22.74 25.727 b 22.794 25.915 22.906 26.078 22.962 26.052 23.018 26.026 23.02 25.813 22.965 25.625 l 22.199 22.994 b 22.144 22.806 22.033 22.643 21.977 22.669 m 20.849 23.182 b 20.793 23.208 20.791 23.421 20.846 23.609 l 21.612 26.24 b 21.667 26.428 21.778 26.591 21.834 26.565 21.891 26.539 21.892 26.326 21.838 26.138 l 21.071 23.507 b 21.017 23.319 20.906 23.157 20.849 23.182 m 23.953 22.089 b 23.933 22.019 23.702 22.044 23.491 22.14 l 20.544 23.48 b 20.334 23.576 20.144 23.742 20.165 23.813 20.185 23.883 20.416 23.858 20.627 23.762 l 23.573 22.422 b 23.784 22.326 23.974 22.16 23.953 22.089 m 24.227 23.029 b 24.206 22.958 23.976 22.984 23.765 23.079 l 20.818 24.42 b 20.608 24.516 20.418 24.682 20.438 24.753 20.459 24.823 20.69 24.798 20.9 24.702 l 23.847 23.361 b 24.058 23.266 24.248 23.099 24.227 23.029 m 24.501 23.968 b 24.48 23.898 24.249 23.923 24.039 24.019 l 21.092 25.36 b 20.881 25.456 20.691 25.622 20.712 25.692 20.732 25.763 20.963 25.738 21.174 25.642 l 24.121 24.301 b 24.331 24.205 24.521 24.039 24.501 23.968 m 24.774 24.908 b 24.754 24.838 24.523 24.863 24.312 24.959 l 21.365 26.3 b 21.155 26.395 20.965 26.562 20.985 26.632 21.006 26.702 21.237 26.677 21.447 26.581 l 24.394 25.241 b 24.605 25.145 24.795 24.979 24.774 24.908"

_WRINKLES = "m 9.92 13.5 b 13.92 13 17.92 13 21.92 13.5 m 12.32 12 b 14.72 11.5 17.12 11.5 19.52 12"
_MOUSTACHE = "m 6.76 30.87 b 10 30.1 9.04 18.2 15.52 21.84 22 18.2 23.2 30.1 25.96 30.87 19.66 32.62 18.76 24.92 15.52 26.39 12.4 24.92 13.06 32.62 6.76 30.87"


# Helper functions
def _make_shape(path: str) -> Shape:
    return Shape(path).move(-10, 9).scale(75, 75)


def _make_shapes(**shapes) -> dict[str, Shape]:
    return {name: _make_shape(path) for name, path in shapes.items()}


def _make_config(
    body_colors: tuple[str, str], **extras
) -> dict[str, dict[str, str | float]]:
    """Create a dango configuration with body colors and optional extras."""
    config = {
        "body": {"1c": body_colors[0], "3c": body_colors[1], "bord": 2.0},
        "eyes": {"1c": "&H000000&", "bord": 0.0},
    }
    config.update(extras)
    return config


# Shape sets for each dango variant
_SHAPE_SETS = {
    "base": _make_shapes(body=_DANGO_BODY, eyes=_BASE_EYES),
    "cute": _make_shapes(body=_DANGO_BODY, eyes=_CUTE_EYES, cheeks=_CUTE_CHEEKS),
    "angry": _make_shapes(body=_DANGO_BODY, eyes=_ANGRY_EYES, cheeks=_ANGRY_CHEEKS),
    "grandpa": _make_shapes(
        body=_DANGO_BODY, eyes=_OLD_EYES, wrinkles=_WRINKLES, moustache=_MOUSTACHE
    ),
    "granny": _make_shapes(body=_DANGO_BODY, eyes=_OLD_EYES, wrinkles=_WRINKLES),
}

# Color configurations for each variant
_COLOR_CONFIGS = {
    "base": _make_config(("&HC7E6EE&", "&H9AC6E2&")),
    "cute": _make_config(
        ("&HE5DCFD&", "&H9A92D5&"), cheeks={"1c": "&HB0A8F5&", "bord": 0.0}
    ),
    "angry": _make_config(
        ("&HF7E4CC&", "&HE8BD9F&"), cheeks={"1c": "&H6A77A7&", "bord": 0.0}
    ),
    "grandpa": _make_config(
        ("&HDAE3EB&", "&H8F9CA7&"),
        wrinkles={"1c": "&H000000&", "bord": 0.0},
        moustache={"1c": "&HD4D5D8&", "3c": "&H8F9197&", "bord": 1.0},
    ),
    "granny": _make_config(
        ("&HDBDCEA&", "&H6B7191&"), wrinkles={"1c": "&H000000&", "bord": 0.0}
    ),
}

# Exported constants
RENDER_ORDER = ["body", "wrinkles", "cheeks", "moustache", "eyes"]

VARIANT_LOOKUP: dict[
    str, tuple[dict[str, Shape], dict[str, dict[str, str | float]]]
] = {name: (_SHAPE_SETS[name], _COLOR_CONFIGS[name]) for name in _SHAPE_SETS}

VARIANT_BASE_CONFIGS = [
    _make_config(colors)
    for colors in [
        ("&HC7E6EE&", "&H9AC6E2&"),  # Yellow
        ("&HE6E6F7&", "&HB3AFDF&"),  # Pink
        ("&HE6DAEA&", "&HAEA3B9&"),  # Purple
        ("&HB8C5D6&", "&H8389A2&"),  # Brown
        ("&HF5EEE2&", "&HD7C6A2&"),  # Blue
        ("&HCCEBD2&", "&HA8C6AF&"),  # Green
        ("&HCDC594&", "&HA59D77&"),  # Aqua
    ]
]

DANGO_ALTERNATIVES: dict[str, list[Shape]] = {
    "eyes": [
        _make_shape(_XD_EYES),
        _make_shape(_SPIRAL_EYES),
    ]
}
